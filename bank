{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "29ff4f13",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-23T07:55:29.710691Z",
     "start_time": "2022-11-23T07:55:26.368993Z"
    }
   },
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import seaborn as sb\n",
    "import matplotlib.pyplot as plt  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "913f53eb",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-23T07:55:30.177980Z",
     "start_time": "2022-11-23T07:55:29.714697Z"
    }
   },
   "outputs": [],
   "source": [
    "from sklearn.linear_model import LogisticRegression\n",
    "from sklearn import metrics\n",
    "from sklearn.metrics import classification_report  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "75affcb1",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-23T07:55:30.333212Z",
     "start_time": "2022-11-23T07:55:30.181524Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age</th>\n",
       "      <th>job</th>\n",
       "      <th>marital</th>\n",
       "      <th>education</th>\n",
       "      <th>default</th>\n",
       "      <th>balance</th>\n",
       "      <th>housing</th>\n",
       "      <th>loan</th>\n",
       "      <th>contact</th>\n",
       "      <th>day</th>\n",
       "      <th>month</th>\n",
       "      <th>duration</th>\n",
       "      <th>campaign</th>\n",
       "      <th>pdays</th>\n",
       "      <th>previous</th>\n",
       "      <th>poutcome</th>\n",
       "      <th>y</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>58</td>\n",
       "      <td>management</td>\n",
       "      <td>married</td>\n",
       "      <td>tertiary</td>\n",
       "      <td>no</td>\n",
       "      <td>2143</td>\n",
       "      <td>yes</td>\n",
       "      <td>no</td>\n",
       "      <td>unknown</td>\n",
       "      <td>5</td>\n",
       "      <td>may</td>\n",
       "      <td>261</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>0</td>\n",
       "      <td>unknown</td>\n",
       "      <td>no</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>44</td>\n",
       "      <td>technician</td>\n",
       "      <td>single</td>\n",
       "      <td>secondary</td>\n",
       "      <td>no</td>\n",
       "      <td>29</td>\n",
       "      <td>yes</td>\n",
       "      <td>no</td>\n",
       "      <td>unknown</td>\n",
       "      <td>5</td>\n",
       "      <td>may</td>\n",
       "      <td>151</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>0</td>\n",
       "      <td>unknown</td>\n",
       "      <td>no</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>33</td>\n",
       "      <td>entrepreneur</td>\n",
       "      <td>married</td>\n",
       "      <td>secondary</td>\n",
       "      <td>no</td>\n",
       "      <td>2</td>\n",
       "      <td>yes</td>\n",
       "      <td>yes</td>\n",
       "      <td>unknown</td>\n",
       "      <td>5</td>\n",
       "      <td>may</td>\n",
       "      <td>76</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>0</td>\n",
       "      <td>unknown</td>\n",
       "      <td>no</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>47</td>\n",
       "      <td>blue-collar</td>\n",
       "      <td>married</td>\n",
       "      <td>unknown</td>\n",
       "      <td>no</td>\n",
       "      <td>1506</td>\n",
       "      <td>yes</td>\n",
       "      <td>no</td>\n",
       "      <td>unknown</td>\n",
       "      <td>5</td>\n",
       "      <td>may</td>\n",
       "      <td>92</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>0</td>\n",
       "      <td>unknown</td>\n",
       "      <td>no</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>33</td>\n",
       "      <td>unknown</td>\n",
       "      <td>single</td>\n",
       "      <td>unknown</td>\n",
       "      <td>no</td>\n",
       "      <td>1</td>\n",
       "      <td>no</td>\n",
       "      <td>no</td>\n",
       "      <td>unknown</td>\n",
       "      <td>5</td>\n",
       "      <td>may</td>\n",
       "      <td>198</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>0</td>\n",
       "      <td>unknown</td>\n",
       "      <td>no</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45206</th>\n",
       "      <td>51</td>\n",
       "      <td>technician</td>\n",
       "      <td>married</td>\n",
       "      <td>tertiary</td>\n",
       "      <td>no</td>\n",
       "      <td>825</td>\n",
       "      <td>no</td>\n",
       "      <td>no</td>\n",
       "      <td>cellular</td>\n",
       "      <td>17</td>\n",
       "      <td>nov</td>\n",
       "      <td>977</td>\n",
       "      <td>3</td>\n",
       "      <td>-1</td>\n",
       "      <td>0</td>\n",
       "      <td>unknown</td>\n",
       "      <td>yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45207</th>\n",
       "      <td>71</td>\n",
       "      <td>retired</td>\n",
       "      <td>divorced</td>\n",
       "      <td>primary</td>\n",
       "      <td>no</td>\n",
       "      <td>1729</td>\n",
       "      <td>no</td>\n",
       "      <td>no</td>\n",
       "      <td>cellular</td>\n",
       "      <td>17</td>\n",
       "      <td>nov</td>\n",
       "      <td>456</td>\n",
       "      <td>2</td>\n",
       "      <td>-1</td>\n",
       "      <td>0</td>\n",
       "      <td>unknown</td>\n",
       "      <td>yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45208</th>\n",
       "      <td>72</td>\n",
       "      <td>retired</td>\n",
       "      <td>married</td>\n",
       "      <td>secondary</td>\n",
       "      <td>no</td>\n",
       "      <td>5715</td>\n",
       "      <td>no</td>\n",
       "      <td>no</td>\n",
       "      <td>cellular</td>\n",
       "      <td>17</td>\n",
       "      <td>nov</td>\n",
       "      <td>1127</td>\n",
       "      <td>5</td>\n",
       "      <td>184</td>\n",
       "      <td>3</td>\n",
       "      <td>success</td>\n",
       "      <td>yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45209</th>\n",
       "      <td>57</td>\n",
       "      <td>blue-collar</td>\n",
       "      <td>married</td>\n",
       "      <td>secondary</td>\n",
       "      <td>no</td>\n",
       "      <td>668</td>\n",
       "      <td>no</td>\n",
       "      <td>no</td>\n",
       "      <td>telephone</td>\n",
       "      <td>17</td>\n",
       "      <td>nov</td>\n",
       "      <td>508</td>\n",
       "      <td>4</td>\n",
       "      <td>-1</td>\n",
       "      <td>0</td>\n",
       "      <td>unknown</td>\n",
       "      <td>no</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45210</th>\n",
       "      <td>37</td>\n",
       "      <td>entrepreneur</td>\n",
       "      <td>married</td>\n",
       "      <td>secondary</td>\n",
       "      <td>no</td>\n",
       "      <td>2971</td>\n",
       "      <td>no</td>\n",
       "      <td>no</td>\n",
       "      <td>cellular</td>\n",
       "      <td>17</td>\n",
       "      <td>nov</td>\n",
       "      <td>361</td>\n",
       "      <td>2</td>\n",
       "      <td>188</td>\n",
       "      <td>11</td>\n",
       "      <td>other</td>\n",
       "      <td>no</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>45211 rows Ã— 17 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       age           job   marital  education default  balance housing loan  \\\n",
       "0       58    management   married   tertiary      no     2143     yes   no   \n",
       "1       44    technician    single  secondary      no       29     yes   no   \n",
       "2       33  entrepreneur   married  secondary      no        2     yes  yes   \n",
       "3       47   blue-collar   married    unknown      no     1506     yes   no   \n",
       "4       33       unknown    single    unknown      no        1      no   no   \n",
       "...    ...           ...       ...        ...     ...      ...     ...  ...   \n",
       "45206   51    technician   married   tertiary      no      825      no   no   \n",
       "45207   71       retired  divorced    primary      no     1729      no   no   \n",
       "45208   72       retired   married  secondary      no     5715      no   no   \n",
       "45209   57   blue-collar   married  secondary      no      668      no   no   \n",
       "45210   37  entrepreneur   married  secondary      no     2971      no   no   \n",
       "\n",
       "         contact  day month  duration  campaign  pdays  previous poutcome    y  \n",
       "0        unknown    5   may       261         1     -1         0  unknown   no  \n",
       "1        unknown    5   may       151         1     -1         0  unknown   no  \n",
       "2        unknown    5   may        76         1     -1         0  unknown   no  \n",
       "3        unknown    5   may        92         1     -1         0  unknown   no  \n",
       "4        unknown    5   may       198         1     -1         0  unknown   no  \n",
       "...          ...  ...   ...       ...       ...    ...       ...      ...  ...  \n",
       "45206   cellular   17   nov       977         3     -1         0  unknown  yes  \n",
       "45207   cellular   17   nov       456         2     -1         0  unknown  yes  \n",
       "45208   cellular   17   nov      1127         5    184         3  success  yes  \n",
       "45209  telephone   17   nov       508         4     -1         0  unknown   no  \n",
       "45210   cellular   17   nov       361         2    188        11    other   no  \n",
       "\n",
       "[45211 rows x 17 columns]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "bank = pd.read_csv(\"bank-full.csv\")\n",
    "bank"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "a77b37c8",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-23T07:55:30.376849Z",
     "start_time": "2022-11-23T07:55:30.337424Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age</th>\n",
       "      <th>job</th>\n",
       "      <th>marital</th>\n",
       "      <th>education</th>\n",
       "      <th>default</th>\n",
       "      <th>balance</th>\n",
       "      <th>housing</th>\n",
       "      <th>loan</th>\n",
       "      <th>contact</th>\n",
       "      <th>day</th>\n",
       "      <th>month</th>\n",
       "      <th>duration</th>\n",
       "      <th>campaign</th>\n",
       "      <th>pdays</th>\n",
       "      <th>previous</th>\n",
       "      <th>poutcome</th>\n",
       "      <th>y</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>58</td>\n",
       "      <td>management</td>\n",
       "      <td>married</td>\n",
       "      <td>tertiary</td>\n",
       "      <td>no</td>\n",
       "      <td>2143</td>\n",
       "      <td>yes</td>\n",
       "      <td>no</td>\n",
       "      <td>unknown</td>\n",
       "      <td>5</td>\n",
       "      <td>may</td>\n",
       "      <td>261</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>0</td>\n",
       "      <td>unknown</td>\n",
       "      <td>no</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>44</td>\n",
       "      <td>technician</td>\n",
       "      <td>single</td>\n",
       "      <td>secondary</td>\n",
       "      <td>no</td>\n",
       "      <td>29</td>\n",
       "      <td>yes</td>\n",
       "      <td>no</td>\n",
       "      <td>unknown</td>\n",
       "      <td>5</td>\n",
       "      <td>may</td>\n",
       "      <td>151</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>0</td>\n",
       "      <td>unknown</td>\n",
       "      <td>no</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>33</td>\n",
       "      <td>entrepreneur</td>\n",
       "      <td>married</td>\n",
       "      <td>secondary</td>\n",
       "      <td>no</td>\n",
       "      <td>2</td>\n",
       "      <td>yes</td>\n",
       "      <td>yes</td>\n",
       "      <td>unknown</td>\n",
       "      <td>5</td>\n",
       "      <td>may</td>\n",
       "      <td>76</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>0</td>\n",
       "      <td>unknown</td>\n",
       "      <td>no</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>47</td>\n",
       "      <td>blue-collar</td>\n",
       "      <td>married</td>\n",
       "      <td>unknown</td>\n",
       "      <td>no</td>\n",
       "      <td>1506</td>\n",
       "      <td>yes</td>\n",
       "      <td>no</td>\n",
       "      <td>unknown</td>\n",
       "      <td>5</td>\n",
       "      <td>may</td>\n",
       "      <td>92</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>0</td>\n",
       "      <td>unknown</td>\n",
       "      <td>no</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>33</td>\n",
       "      <td>unknown</td>\n",
       "      <td>single</td>\n",
       "      <td>unknown</td>\n",
       "      <td>no</td>\n",
       "      <td>1</td>\n",
       "      <td>no</td>\n",
       "      <td>no</td>\n",
       "      <td>unknown</td>\n",
       "      <td>5</td>\n",
       "      <td>may</td>\n",
       "      <td>198</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>0</td>\n",
       "      <td>unknown</td>\n",
       "      <td>no</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   age           job  marital  education default  balance housing loan  \\\n",
       "0   58    management  married   tertiary      no     2143     yes   no   \n",
       "1   44    technician   single  secondary      no       29     yes   no   \n",
       "2   33  entrepreneur  married  secondary      no        2     yes  yes   \n",
       "3   47   blue-collar  married    unknown      no     1506     yes   no   \n",
       "4   33       unknown   single    unknown      no        1      no   no   \n",
       "\n",
       "   contact  day month  duration  campaign  pdays  previous poutcome   y  \n",
       "0  unknown    5   may       261         1     -1         0  unknown  no  \n",
       "1  unknown    5   may       151         1     -1         0  unknown  no  \n",
       "2  unknown    5   may        76         1     -1         0  unknown  no  \n",
       "3  unknown    5   may        92         1     -1         0  unknown  no  \n",
       "4  unknown    5   may       198         1     -1         0  unknown  no  "
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "bank.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "01fa6402",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-23T07:55:30.470695Z",
     "start_time": "2022-11-23T07:55:30.380172Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "age          0\n",
       "job          0\n",
       "marital      0\n",
       "education    0\n",
       "default      0\n",
       "balance      0\n",
       "housing      0\n",
       "loan         0\n",
       "contact      0\n",
       "day          0\n",
       "month        0\n",
       "duration     0\n",
       "campaign     0\n",
       "pdays        0\n",
       "previous     0\n",
       "poutcome     0\n",
       "y            0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "bank.isnull().sum() "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "dcd6e5ea",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-23T07:55:30.485939Z",
     "start_time": "2022-11-23T07:55:30.472696Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "age           int64\n",
       "job          object\n",
       "marital      object\n",
       "education    object\n",
       "default      object\n",
       "balance       int64\n",
       "housing      object\n",
       "loan         object\n",
       "contact      object\n",
       "day           int64\n",
       "month        object\n",
       "duration      int64\n",
       "campaign      int64\n",
       "pdays         int64\n",
       "previous      int64\n",
       "poutcome     object\n",
       "y            object\n",
       "dtype: object"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "bank.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "4f941261",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-23T07:55:30.544206Z",
     "start_time": "2022-11-23T07:55:30.488941Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age</th>\n",
       "      <th>balance</th>\n",
       "      <th>day</th>\n",
       "      <th>duration</th>\n",
       "      <th>campaign</th>\n",
       "      <th>pdays</th>\n",
       "      <th>previous</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>45211.000000</td>\n",
       "      <td>45211.000000</td>\n",
       "      <td>45211.000000</td>\n",
       "      <td>45211.000000</td>\n",
       "      <td>45211.000000</td>\n",
       "      <td>45211.000000</td>\n",
       "      <td>45211.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>40.936210</td>\n",
       "      <td>1362.272058</td>\n",
       "      <td>15.806419</td>\n",
       "      <td>258.163080</td>\n",
       "      <td>2.763841</td>\n",
       "      <td>40.197828</td>\n",
       "      <td>0.580323</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>10.618762</td>\n",
       "      <td>3044.765829</td>\n",
       "      <td>8.322476</td>\n",
       "      <td>257.527812</td>\n",
       "      <td>3.098021</td>\n",
       "      <td>100.128746</td>\n",
       "      <td>2.303441</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>18.000000</td>\n",
       "      <td>-8019.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>33.000000</td>\n",
       "      <td>72.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>103.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>39.000000</td>\n",
       "      <td>448.000000</td>\n",
       "      <td>16.000000</td>\n",
       "      <td>180.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>-1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>48.000000</td>\n",
       "      <td>1428.000000</td>\n",
       "      <td>21.000000</td>\n",
       "      <td>319.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>-1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>95.000000</td>\n",
       "      <td>102127.000000</td>\n",
       "      <td>31.000000</td>\n",
       "      <td>4918.000000</td>\n",
       "      <td>63.000000</td>\n",
       "      <td>871.000000</td>\n",
       "      <td>275.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                age        balance           day      duration      campaign  \\\n",
       "count  45211.000000   45211.000000  45211.000000  45211.000000  45211.000000   \n",
       "mean      40.936210    1362.272058     15.806419    258.163080      2.763841   \n",
       "std       10.618762    3044.765829      8.322476    257.527812      3.098021   \n",
       "min       18.000000   -8019.000000      1.000000      0.000000      1.000000   \n",
       "25%       33.000000      72.000000      8.000000    103.000000      1.000000   \n",
       "50%       39.000000     448.000000     16.000000    180.000000      2.000000   \n",
       "75%       48.000000    1428.000000     21.000000    319.000000      3.000000   \n",
       "max       95.000000  102127.000000     31.000000   4918.000000     63.000000   \n",
       "\n",
       "              pdays      previous  \n",
       "count  45211.000000  45211.000000  \n",
       "mean      40.197828      0.580323  \n",
       "std      100.128746      2.303441  \n",
       "min       -1.000000      0.000000  \n",
       "25%       -1.000000      0.000000  \n",
       "50%       -1.000000      0.000000  \n",
       "75%       -1.000000      0.000000  \n",
       "max      871.000000    275.000000  "
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "bank.describe()  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "91c9689b",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-23T07:55:30.768065Z",
     "start_time": "2022-11-23T07:55:30.547859Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='y', ylabel='balance'>"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sb.boxplot(x=\"y\",y=\"balance\",data=bank,palette=\"hls\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "298d79ba",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-23T07:55:30.931584Z",
     "start_time": "2022-11-23T07:55:30.770227Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='y', ylabel='age'>"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sb.boxplot(x=\"y\",y=\"age\",data=bank,palette=\"hls\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "a43e0364",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-23T07:55:31.124701Z",
     "start_time": "2022-11-23T07:55:30.935826Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='y', ylabel='pdays'>"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sb.boxplot(x=\"y\",y=\"pdays\",data=bank,palette=\"hls\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "d1b41da1",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-23T07:56:06.471937Z",
     "start_time": "2022-11-23T07:56:06.355682Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age</th>\n",
       "      <th>default</th>\n",
       "      <th>balance</th>\n",
       "      <th>housing</th>\n",
       "      <th>loan</th>\n",
       "      <th>day</th>\n",
       "      <th>duration</th>\n",
       "      <th>campaign</th>\n",
       "      <th>pdays</th>\n",
       "      <th>previous</th>\n",
       "      <th>y</th>\n",
       "      <th>job_admin.</th>\n",
       "      <th>job_blue-collar</th>\n",
       "      <th>job_entrepreneur</th>\n",
       "      <th>job_housemaid</th>\n",
       "      <th>job_management</th>\n",
       "      <th>job_retired</th>\n",
       "      <th>job_self-employed</th>\n",
       "      <th>job_services</th>\n",
       "      <th>job_student</th>\n",
       "      <th>job_technician</th>\n",
       "      <th>job_unemployed</th>\n",
       "      <th>job_unknown</th>\n",
       "      <th>marital_divorced</th>\n",
       "      <th>marital_married</th>\n",
       "      <th>marital_single</th>\n",
       "      <th>education_primary</th>\n",
       "      <th>education_secondary</th>\n",
       "      <th>education_tertiary</th>\n",
       "      <th>education_unknown</th>\n",
       "      <th>contact_cellular</th>\n",
       "      <th>contact_telephone</th>\n",
       "      <th>contact_unknown</th>\n",
       "      <th>poutcome_failure</th>\n",
       "      <th>poutcome_other</th>\n",
       "      <th>poutcome_success</th>\n",
       "      <th>poutcome_unknown</th>\n",
       "      <th>month_apr</th>\n",
       "      <th>month_aug</th>\n",
       "      <th>month_dec</th>\n",
       "      <th>month_feb</th>\n",
       "      <th>month_jan</th>\n",
       "      <th>month_jul</th>\n",
       "      <th>month_jun</th>\n",
       "      <th>month_mar</th>\n",
       "      <th>month_may</th>\n",
       "      <th>month_nov</th>\n",
       "      <th>month_oct</th>\n",
       "      <th>month_sep</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>58</td>\n",
       "      <td>no</td>\n",
       "      <td>2143</td>\n",
       "      <td>yes</td>\n",
       "      <td>no</td>\n",
       "      <td>5</td>\n",
       "      <td>261</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>0</td>\n",
       "      <td>no</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>44</td>\n",
       "      <td>no</td>\n",
       "      <td>29</td>\n",
       "      <td>yes</td>\n",
       "      <td>no</td>\n",
       "      <td>5</td>\n",
       "      <td>151</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>0</td>\n",
       "      <td>no</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>33</td>\n",
       "      <td>no</td>\n",
       "      <td>2</td>\n",
       "      <td>yes</td>\n",
       "      <td>yes</td>\n",
       "      <td>5</td>\n",
       "      <td>76</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>0</td>\n",
       "      <td>no</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>47</td>\n",
       "      <td>no</td>\n",
       "      <td>1506</td>\n",
       "      <td>yes</td>\n",
       "      <td>no</td>\n",
       "      <td>5</td>\n",
       "      <td>92</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>0</td>\n",
       "      <td>no</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>33</td>\n",
       "      <td>no</td>\n",
       "      <td>1</td>\n",
       "      <td>no</td>\n",
       "      <td>no</td>\n",
       "      <td>5</td>\n",
       "      <td>198</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>0</td>\n",
       "      <td>no</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45206</th>\n",
       "      <td>51</td>\n",
       "      <td>no</td>\n",
       "      <td>825</td>\n",
       "      <td>no</td>\n",
       "      <td>no</td>\n",
       "      <td>17</td>\n",
       "      <td>977</td>\n",
       "      <td>3</td>\n",
       "      <td>-1</td>\n",
       "      <td>0</td>\n",
       "      <td>yes</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45207</th>\n",
       "      <td>71</td>\n",
       "      <td>no</td>\n",
       "      <td>1729</td>\n",
       "      <td>no</td>\n",
       "      <td>no</td>\n",
       "      <td>17</td>\n",
       "      <td>456</td>\n",
       "      <td>2</td>\n",
       "      <td>-1</td>\n",
       "      <td>0</td>\n",
       "      <td>yes</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45208</th>\n",
       "      <td>72</td>\n",
       "      <td>no</td>\n",
       "      <td>5715</td>\n",
       "      <td>no</td>\n",
       "      <td>no</td>\n",
       "      <td>17</td>\n",
       "      <td>1127</td>\n",
       "      <td>5</td>\n",
       "      <td>184</td>\n",
       "      <td>3</td>\n",
       "      <td>yes</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45209</th>\n",
       "      <td>57</td>\n",
       "      <td>no</td>\n",
       "      <td>668</td>\n",
       "      <td>no</td>\n",
       "      <td>no</td>\n",
       "      <td>17</td>\n",
       "      <td>508</td>\n",
       "      <td>4</td>\n",
       "      <td>-1</td>\n",
       "      <td>0</td>\n",
       "      <td>no</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45210</th>\n",
       "      <td>37</td>\n",
       "      <td>no</td>\n",
       "      <td>2971</td>\n",
       "      <td>no</td>\n",
       "      <td>no</td>\n",
       "      <td>17</td>\n",
       "      <td>361</td>\n",
       "      <td>2</td>\n",
       "      <td>188</td>\n",
       "      <td>11</td>\n",
       "      <td>no</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>45211 rows Ã— 49 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       age default  balance housing loan  day  duration  campaign  pdays  \\\n",
       "0       58      no     2143     yes   no    5       261         1     -1   \n",
       "1       44      no       29     yes   no    5       151         1     -1   \n",
       "2       33      no        2     yes  yes    5        76         1     -1   \n",
       "3       47      no     1506     yes   no    5        92         1     -1   \n",
       "4       33      no        1      no   no    5       198         1     -1   \n",
       "...    ...     ...      ...     ...  ...  ...       ...       ...    ...   \n",
       "45206   51      no      825      no   no   17       977         3     -1   \n",
       "45207   71      no     1729      no   no   17       456         2     -1   \n",
       "45208   72      no     5715      no   no   17      1127         5    184   \n",
       "45209   57      no      668      no   no   17       508         4     -1   \n",
       "45210   37      no     2971      no   no   17       361         2    188   \n",
       "\n",
       "       previous    y  job_admin.  job_blue-collar  job_entrepreneur  \\\n",
       "0             0   no           0                0                 0   \n",
       "1             0   no           0                0                 0   \n",
       "2             0   no           0                0                 1   \n",
       "3             0   no           0                1                 0   \n",
       "4             0   no           0                0                 0   \n",
       "...         ...  ...         ...              ...               ...   \n",
       "45206         0  yes           0                0                 0   \n",
       "45207         0  yes           0                0                 0   \n",
       "45208         3  yes           0                0                 0   \n",
       "45209         0   no           0                1                 0   \n",
       "45210        11   no           0                0                 1   \n",
       "\n",
       "       job_housemaid  job_management  job_retired  job_self-employed  \\\n",
       "0                  0               1            0                  0   \n",
       "1                  0               0            0                  0   \n",
       "2                  0               0            0                  0   \n",
       "3                  0               0            0                  0   \n",
       "4                  0               0            0                  0   \n",
       "...              ...             ...          ...                ...   \n",
       "45206              0               0            0                  0   \n",
       "45207              0               0            1                  0   \n",
       "45208              0               0            1                  0   \n",
       "45209              0               0            0                  0   \n",
       "45210              0               0            0                  0   \n",
       "\n",
       "       job_services  job_student  job_technician  job_unemployed  job_unknown  \\\n",
       "0                 0            0               0               0            0   \n",
       "1                 0            0               1               0            0   \n",
       "2                 0            0               0               0            0   \n",
       "3                 0            0               0               0            0   \n",
       "4                 0            0               0               0            1   \n",
       "...             ...          ...             ...             ...          ...   \n",
       "45206             0            0               1               0            0   \n",
       "45207             0            0               0               0            0   \n",
       "45208             0            0               0               0            0   \n",
       "45209             0            0               0               0            0   \n",
       "45210             0            0               0               0            0   \n",
       "\n",
       "       marital_divorced  marital_married  marital_single  education_primary  \\\n",
       "0                     0                1               0                  0   \n",
       "1                     0                0               1                  0   \n",
       "2                     0                1               0                  0   \n",
       "3                     0                1               0                  0   \n",
       "4                     0                0               1                  0   \n",
       "...                 ...              ...             ...                ...   \n",
       "45206                 0                1               0                  0   \n",
       "45207                 1                0               0                  1   \n",
       "45208                 0                1               0                  0   \n",
       "45209                 0                1               0                  0   \n",
       "45210                 0                1               0                  0   \n",
       "\n",
       "       education_secondary  education_tertiary  education_unknown  \\\n",
       "0                        0                   1                  0   \n",
       "1                        1                   0                  0   \n",
       "2                        1                   0                  0   \n",
       "3                        0                   0                  1   \n",
       "4                        0                   0                  1   \n",
       "...                    ...                 ...                ...   \n",
       "45206                    0                   1                  0   \n",
       "45207                    0                   0                  0   \n",
       "45208                    1                   0                  0   \n",
       "45209                    1                   0                  0   \n",
       "45210                    1                   0                  0   \n",
       "\n",
       "       contact_cellular  contact_telephone  contact_unknown  poutcome_failure  \\\n",
       "0                     0                  0                1                 0   \n",
       "1                     0                  0                1                 0   \n",
       "2                     0                  0                1                 0   \n",
       "3                     0                  0                1                 0   \n",
       "4                     0                  0                1                 0   \n",
       "...                 ...                ...              ...               ...   \n",
       "45206                 1                  0                0                 0   \n",
       "45207                 1                  0                0                 0   \n",
       "45208                 1                  0                0                 0   \n",
       "45209                 0                  1                0                 0   \n",
       "45210                 1                  0                0                 0   \n",
       "\n",
       "       poutcome_other  poutcome_success  poutcome_unknown  month_apr  \\\n",
       "0                   0                 0                 1          0   \n",
       "1                   0                 0                 1          0   \n",
       "2                   0                 0                 1          0   \n",
       "3                   0                 0                 1          0   \n",
       "4                   0                 0                 1          0   \n",
       "...               ...               ...               ...        ...   \n",
       "45206               0                 0                 1          0   \n",
       "45207               0                 0                 1          0   \n",
       "45208               0                 1                 0          0   \n",
       "45209               0                 0                 1          0   \n",
       "45210               1                 0                 0          0   \n",
       "\n",
       "       month_aug  month_dec  month_feb  month_jan  month_jul  month_jun  \\\n",
       "0              0          0          0          0          0          0   \n",
       "1              0          0          0          0          0          0   \n",
       "2              0          0          0          0          0          0   \n",
       "3              0          0          0          0          0          0   \n",
       "4              0          0          0          0          0          0   \n",
       "...          ...        ...        ...        ...        ...        ...   \n",
       "45206          0          0          0          0          0          0   \n",
       "45207          0          0          0          0          0          0   \n",
       "45208          0          0          0          0          0          0   \n",
       "45209          0          0          0          0          0          0   \n",
       "45210          0          0          0          0          0          0   \n",
       "\n",
       "       month_mar  month_may  month_nov  month_oct  month_sep  \n",
       "0              0          1          0          0          0  \n",
       "1              0          1          0          0          0  \n",
       "2              0          1          0          0          0  \n",
       "3              0          1          0          0          0  \n",
       "4              0          1          0          0          0  \n",
       "...          ...        ...        ...        ...        ...  \n",
       "45206          0          0          1          0          0  \n",
       "45207          0          0          1          0          0  \n",
       "45208          0          0          1          0          0  \n",
       "45209          0          0          1          0          0  \n",
       "45210          0          0          1          0          0  \n",
       "\n",
       "[45211 rows x 49 columns]"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pd.set_option(\"display.max.columns\",None)\n",
    "bank1=pd.get_dummies(bank,columns=['job','marital','education','contact','poutcome','month'])\n",
    "bank1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "5d060f03",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-23T07:57:21.747726Z",
     "start_time": "2022-11-23T07:57:21.615554Z"
    }
   },
   "outputs": [],
   "source": [
    "# Binary data conversion \n",
    "bank1['default'] = np.where(bank1['default'].str.contains(\"yes\"), 1,0)\n",
    "bank1['housing'] = np.where(bank1['housing'].str.contains(\"yes\"), 1, 0)\n",
    "bank1['loan'] = np.where(bank1['loan'].str.contains(\"yes\"), 1, 0)\n",
    "bank1['y'] = np.where(bank1['y'].str.contains(\"yes\"), 1, 0)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "096fdeb7",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-23T07:57:31.529428Z",
     "start_time": "2022-11-23T07:57:31.471189Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age</th>\n",
       "      <th>default</th>\n",
       "      <th>balance</th>\n",
       "      <th>housing</th>\n",
       "      <th>loan</th>\n",
       "      <th>day</th>\n",
       "      <th>duration</th>\n",
       "      <th>campaign</th>\n",
       "      <th>pdays</th>\n",
       "      <th>previous</th>\n",
       "      <th>y</th>\n",
       "      <th>job_admin.</th>\n",
       "      <th>job_blue-collar</th>\n",
       "      <th>job_entrepreneur</th>\n",
       "      <th>job_housemaid</th>\n",
       "      <th>job_management</th>\n",
       "      <th>job_retired</th>\n",
       "      <th>job_self-employed</th>\n",
       "      <th>job_services</th>\n",
       "      <th>job_student</th>\n",
       "      <th>job_technician</th>\n",
       "      <th>job_unemployed</th>\n",
       "      <th>job_unknown</th>\n",
       "      <th>marital_divorced</th>\n",
       "      <th>marital_married</th>\n",
       "      <th>marital_single</th>\n",
       "      <th>education_primary</th>\n",
       "      <th>education_secondary</th>\n",
       "      <th>education_tertiary</th>\n",
       "      <th>education_unknown</th>\n",
       "      <th>contact_cellular</th>\n",
       "      <th>contact_telephone</th>\n",
       "      <th>contact_unknown</th>\n",
       "      <th>poutcome_failure</th>\n",
       "      <th>poutcome_other</th>\n",
       "      <th>poutcome_success</th>\n",
       "      <th>poutcome_unknown</th>\n",
       "      <th>month_apr</th>\n",
       "      <th>month_aug</th>\n",
       "      <th>month_dec</th>\n",
       "      <th>month_feb</th>\n",
       "      <th>month_jan</th>\n",
       "      <th>month_jul</th>\n",
       "      <th>month_jun</th>\n",
       "      <th>month_mar</th>\n",
       "      <th>month_may</th>\n",
       "      <th>month_nov</th>\n",
       "      <th>month_oct</th>\n",
       "      <th>month_sep</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>58</td>\n",
       "      <td>0</td>\n",
       "      <td>2143</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>261</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>44</td>\n",
       "      <td>0</td>\n",
       "      <td>29</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>151</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>33</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>76</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>47</td>\n",
       "      <td>0</td>\n",
       "      <td>1506</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>92</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>33</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>198</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45206</th>\n",
       "      <td>51</td>\n",
       "      <td>0</td>\n",
       "      <td>825</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>17</td>\n",
       "      <td>977</td>\n",
       "      <td>3</td>\n",
       "      <td>-1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45207</th>\n",
       "      <td>71</td>\n",
       "      <td>0</td>\n",
       "      <td>1729</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>17</td>\n",
       "      <td>456</td>\n",
       "      <td>2</td>\n",
       "      <td>-1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45208</th>\n",
       "      <td>72</td>\n",
       "      <td>0</td>\n",
       "      <td>5715</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>17</td>\n",
       "      <td>1127</td>\n",
       "      <td>5</td>\n",
       "      <td>184</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45209</th>\n",
       "      <td>57</td>\n",
       "      <td>0</td>\n",
       "      <td>668</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>17</td>\n",
       "      <td>508</td>\n",
       "      <td>4</td>\n",
       "      <td>-1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45210</th>\n",
       "      <td>37</td>\n",
       "      <td>0</td>\n",
       "      <td>2971</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>17</td>\n",
       "      <td>361</td>\n",
       "      <td>2</td>\n",
       "      <td>188</td>\n",
       "      <td>11</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>45211 rows Ã— 49 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       age  default  balance  housing  loan  day  duration  campaign  pdays  \\\n",
       "0       58        0     2143        1     0    5       261         1     -1   \n",
       "1       44        0       29        1     0    5       151         1     -1   \n",
       "2       33        0        2        1     1    5        76         1     -1   \n",
       "3       47        0     1506        1     0    5        92         1     -1   \n",
       "4       33        0        1        0     0    5       198         1     -1   \n",
       "...    ...      ...      ...      ...   ...  ...       ...       ...    ...   \n",
       "45206   51        0      825        0     0   17       977         3     -1   \n",
       "45207   71        0     1729        0     0   17       456         2     -1   \n",
       "45208   72        0     5715        0     0   17      1127         5    184   \n",
       "45209   57        0      668        0     0   17       508         4     -1   \n",
       "45210   37        0     2971        0     0   17       361         2    188   \n",
       "\n",
       "       previous  y  job_admin.  job_blue-collar  job_entrepreneur  \\\n",
       "0             0  0           0                0                 0   \n",
       "1             0  0           0                0                 0   \n",
       "2             0  0           0                0                 1   \n",
       "3             0  0           0                1                 0   \n",
       "4             0  0           0                0                 0   \n",
       "...         ... ..         ...              ...               ...   \n",
       "45206         0  1           0                0                 0   \n",
       "45207         0  1           0                0                 0   \n",
       "45208         3  1           0                0                 0   \n",
       "45209         0  0           0                1                 0   \n",
       "45210        11  0           0                0                 1   \n",
       "\n",
       "       job_housemaid  job_management  job_retired  job_self-employed  \\\n",
       "0                  0               1            0                  0   \n",
       "1                  0               0            0                  0   \n",
       "2                  0               0            0                  0   \n",
       "3                  0               0            0                  0   \n",
       "4                  0               0            0                  0   \n",
       "...              ...             ...          ...                ...   \n",
       "45206              0               0            0                  0   \n",
       "45207              0               0            1                  0   \n",
       "45208              0               0            1                  0   \n",
       "45209              0               0            0                  0   \n",
       "45210              0               0            0                  0   \n",
       "\n",
       "       job_services  job_student  job_technician  job_unemployed  job_unknown  \\\n",
       "0                 0            0               0               0            0   \n",
       "1                 0            0               1               0            0   \n",
       "2                 0            0               0               0            0   \n",
       "3                 0            0               0               0            0   \n",
       "4                 0            0               0               0            1   \n",
       "...             ...          ...             ...             ...          ...   \n",
       "45206             0            0               1               0            0   \n",
       "45207             0            0               0               0            0   \n",
       "45208             0            0               0               0            0   \n",
       "45209             0            0               0               0            0   \n",
       "45210             0            0               0               0            0   \n",
       "\n",
       "       marital_divorced  marital_married  marital_single  education_primary  \\\n",
       "0                     0                1               0                  0   \n",
       "1                     0                0               1                  0   \n",
       "2                     0                1               0                  0   \n",
       "3                     0                1               0                  0   \n",
       "4                     0                0               1                  0   \n",
       "...                 ...              ...             ...                ...   \n",
       "45206                 0                1               0                  0   \n",
       "45207                 1                0               0                  1   \n",
       "45208                 0                1               0                  0   \n",
       "45209                 0                1               0                  0   \n",
       "45210                 0                1               0                  0   \n",
       "\n",
       "       education_secondary  education_tertiary  education_unknown  \\\n",
       "0                        0                   1                  0   \n",
       "1                        1                   0                  0   \n",
       "2                        1                   0                  0   \n",
       "3                        0                   0                  1   \n",
       "4                        0                   0                  1   \n",
       "...                    ...                 ...                ...   \n",
       "45206                    0                   1                  0   \n",
       "45207                    0                   0                  0   \n",
       "45208                    1                   0                  0   \n",
       "45209                    1                   0                  0   \n",
       "45210                    1                   0                  0   \n",
       "\n",
       "       contact_cellular  contact_telephone  contact_unknown  poutcome_failure  \\\n",
       "0                     0                  0                1                 0   \n",
       "1                     0                  0                1                 0   \n",
       "2                     0                  0                1                 0   \n",
       "3                     0                  0                1                 0   \n",
       "4                     0                  0                1                 0   \n",
       "...                 ...                ...              ...               ...   \n",
       "45206                 1                  0                0                 0   \n",
       "45207                 1                  0                0                 0   \n",
       "45208                 1                  0                0                 0   \n",
       "45209                 0                  1                0                 0   \n",
       "45210                 1                  0                0                 0   \n",
       "\n",
       "       poutcome_other  poutcome_success  poutcome_unknown  month_apr  \\\n",
       "0                   0                 0                 1          0   \n",
       "1                   0                 0                 1          0   \n",
       "2                   0                 0                 1          0   \n",
       "3                   0                 0                 1          0   \n",
       "4                   0                 0                 1          0   \n",
       "...               ...               ...               ...        ...   \n",
       "45206               0                 0                 1          0   \n",
       "45207               0                 0                 1          0   \n",
       "45208               0                 1                 0          0   \n",
       "45209               0                 0                 1          0   \n",
       "45210               1                 0                 0          0   \n",
       "\n",
       "       month_aug  month_dec  month_feb  month_jan  month_jul  month_jun  \\\n",
       "0              0          0          0          0          0          0   \n",
       "1              0          0          0          0          0          0   \n",
       "2              0          0          0          0          0          0   \n",
       "3              0          0          0          0          0          0   \n",
       "4              0          0          0          0          0          0   \n",
       "...          ...        ...        ...        ...        ...        ...   \n",
       "45206          0          0          0          0          0          0   \n",
       "45207          0          0          0          0          0          0   \n",
       "45208          0          0          0          0          0          0   \n",
       "45209          0          0          0          0          0          0   \n",
       "45210          0          0          0          0          0          0   \n",
       "\n",
       "       month_mar  month_may  month_nov  month_oct  month_sep  \n",
       "0              0          1          0          0          0  \n",
       "1              0          1          0          0          0  \n",
       "2              0          1          0          0          0  \n",
       "3              0          1          0          0          0  \n",
       "4              0          1          0          0          0  \n",
       "...          ...        ...        ...        ...        ...  \n",
       "45206          0          0          1          0          0  \n",
       "45207          0          0          1          0          0  \n",
       "45208          0          0          1          0          0  \n",
       "45209          0          0          1          0          0  \n",
       "45210          0          0          1          0          0  \n",
       "\n",
       "[45211 rows x 49 columns]"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "bank1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "c74f374a",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-23T08:12:43.153713Z",
     "start_time": "2022-11-23T08:12:43.125975Z"
    }
   },
   "outputs": [],
   "source": [
    "# Dividing our data into input and output variables\n",
    "x=pd.concat([bank1.iloc[:,0:10],bank1.iloc[:,11:]],axis=1)\n",
    "y=bank1.iloc[:,10]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "269074f8",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-23T08:12:43.177383Z",
     "start_time": "2022-11-23T08:12:43.158584Z"
    }
   },
   "outputs": [],
   "source": [
    "import warnings\n",
    "warnings.filterwarnings('ignore')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "00d9dddf",
   "metadata": {},
   "source": [
    "# Logistic regression model building"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "75ea3a76",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-23T08:12:59.029213Z",
     "start_time": "2022-11-23T08:12:57.745484Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "LogisticRegression()"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "classifier=LogisticRegression()\n",
    "classifier.fit(x,y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "59e55881",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-23T08:13:02.562565Z",
     "start_time": "2022-11-23T08:13:02.545494Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[-2.02917627e-02, -1.62990794e-02,  8.71974414e-06,\n",
       "        -5.98770017e-01, -1.70668149e-01, -1.06660651e-02,\n",
       "         3.91748850e-03, -4.57025485e-01,  1.50518712e-03,\n",
       "        -1.50647021e-02, -2.46389724e-02, -2.27675300e-01,\n",
       "        -2.36038959e-02, -7.26606894e-03,  7.03725876e-03,\n",
       "         1.47389759e-01, -1.38815361e-02, -7.97889642e-02,\n",
       "         2.57493477e-02, -6.27275686e-02,  2.85057341e-03,\n",
       "         2.24910389e-03,  1.55116636e-02, -1.54013539e-01,\n",
       "        -1.15804389e-01, -6.12675438e-02, -2.47324199e-01,\n",
       "         4.20835256e-02,  1.22019535e-02,  8.23440887e-02,\n",
       "         4.43789558e-02, -3.81029309e-01, -1.16399590e-01,\n",
       "        -2.63127125e-02,  2.74913657e-01, -3.86507618e-01,\n",
       "         3.71120406e-02,  1.97966990e-02,  2.52556539e-02,\n",
       "        -1.30328170e-02, -9.56606599e-03, -7.30748286e-02,\n",
       "        -5.08145546e-02,  7.58299231e-02, -3.73053471e-01,\n",
       "        -4.58601243e-02,  8.73567966e-02,  6.57444843e-02]])"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# coefficients of features \n",
    "classifier.coef_    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "0267a668",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-23T08:13:06.256899Z",
     "start_time": "2022-11-23T08:13:06.201785Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[0.93969905, 0.06030095],\n",
       "       [0.96203725, 0.03796275],\n",
       "       [0.96991084, 0.03008916],\n",
       "       ...,\n",
       "       [0.3607134 , 0.6392866 ],\n",
       "       [0.92004656, 0.07995344],\n",
       "       [0.7226977 , 0.2773023 ]])"
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    " # coefficients of features   \n",
    "classifier.predict_proba (x)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "eb614f82",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-23T08:13:10.367922Z",
     "start_time": "2022-11-23T08:13:10.318226Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0, 0, 0, ..., 1, 0, 0])"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_pred = classifier.predict(x)\n",
    "y_pred"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "b6bf5c34",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-23T08:13:12.963320Z",
     "start_time": "2022-11-23T08:13:12.946777Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>actual_yval</th>\n",
       "      <th>y_pred_prob</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45206</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45207</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45208</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45209</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45210</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>45211 rows Ã— 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       actual_yval  y_pred_prob\n",
       "0                0            0\n",
       "1                0            0\n",
       "2                0            0\n",
       "3                0            0\n",
       "4                0            0\n",
       "...            ...          ...\n",
       "45206            1            1\n",
       "45207            1            0\n",
       "45208            1            1\n",
       "45209            0            0\n",
       "45210            0            0\n",
       "\n",
       "[45211 rows x 2 columns]"
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_pred_df=pd.DataFrame({'actual_yval':y,'y_pred_prob':y_pred})\n",
    "y_pred_df"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "56d648d9",
   "metadata": {},
   "source": [
    "# Testing Model Accuracy"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "84bfd04d",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-23T08:13:16.544939Z",
     "start_time": "2022-11-23T08:13:16.527263Z"
    }
   },
   "outputs": [],
   "source": [
    "from sklearn.metrics import confusion_matrix"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "d682f93d",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-23T08:13:20.692175Z",
     "start_time": "2022-11-23T08:13:20.677138Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[39033   889]\n",
      " [ 4000  1289]]\n"
     ]
    }
   ],
   "source": [
    "confusion_matrix = confusion_matrix(y,y_pred)\n",
    "print (confusion_matrix) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "6183c8bf",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-23T08:13:51.810101Z",
     "start_time": "2022-11-23T08:13:51.770454Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>y</th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>row_0</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>39033</td>\n",
       "      <td>4000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>889</td>\n",
       "      <td>1289</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "y          0     1\n",
       "row_0             \n",
       "0      39033  4000\n",
       "1        889  1289"
      ]
     },
     "execution_count": 55,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pd.crosstab(y_pred,y)  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "2d372735",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-23T08:16:00.849547Z",
     "start_time": "2022-11-23T08:16:00.836424Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.8918625998097808"
      ]
     },
     "execution_count": 57,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# The model accuracy\n",
    "accuracy = sum(y==y_pred)/bank1.shape[0]\n",
    "accuracy "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "b4e06255",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-23T08:19:43.736778Z",
     "start_time": "2022-11-23T08:19:43.639230Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.91      0.98      0.94     39922\n",
      "           1       0.59      0.24      0.35      5289\n",
      "\n",
      "    accuracy                           0.89     45211\n",
      "   macro avg       0.75      0.61      0.64     45211\n",
      "weighted avg       0.87      0.89      0.87     45211\n",
      "\n"
     ]
    }
   ],
   "source": [
    "from sklearn.metrics import classification_report \n",
    "print (classification_report (y, y_pred))  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "0ae5a7a7",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-23T08:21:14.163751Z",
     "start_time": "2022-11-23T08:21:14.079078Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.6107224719702758"
      ]
     },
     "execution_count": 60,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.metrics import roc_auc_score\n",
    "from sklearn.metrics import roc_curve\n",
    "Logit_roc_score=roc_auc_score(y,classifier.predict(x))\n",
    "Logit_roc_score  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "ea3db812",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-23T08:21:51.758586Z",
     "start_time": "2022-11-23T08:21:51.531742Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fpr, tpr, thresholds = roc_curve(y,classifier.predict_proba(x)[:,1]) \n",
    "plt.plot(fpr, tpr, label='Logistic Regression (area=%0.2f)'% Logit_roc_score)\n",
    "plt.plot([0, 1], [0, 1],'r--')\n",
    "plt.xlim([0.0, 1.0])\n",
    "plt.ylim([0.0, 1.05])\n",
    "plt.xlabel('False Positive Rate')\n",
    "plt.ylabel('True Positive Rate')\n",
    "plt.title('Receiver operating characteristic')\n",
    "plt.legend(loc=\"lower right\")\n",
    "plt.show()   "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "id": "d1f5e2d0",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-23T08:23:52.371967Z",
     "start_time": "2022-11-23T08:23:52.361134Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "auc accuracy: 0.6107224719702758\n"
     ]
    }
   ],
   "source": [
    "print('auc accuracy:',Logit_roc_score )"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
